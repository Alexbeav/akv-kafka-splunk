---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # The following are for avoiding errors and warnings with the confluentinc/cp-server image
      # ========================================================================================
      # Set the Conflent license topic replication factor to 1, since we only have 1 broker
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # Without this, brokers complain about insufficient broker count
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # Disable Confluent metrics
      # KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: false
    # command: "/usr/bin/kafka-topics --create --topic jira_topic --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --if-not-exists"

  connect:
    image: confluentinc/cp-kafka-connect:7.3.0
    hostname: connect
    container_name: connect
    depends_on:
      - broker
  #     - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      # CONNECT_OFFSET_STORAGE_FILE_FILENAME: "/tmp/connect.offsets"
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      # CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      # CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-latest.jar
      # CLASSPATH: /etc/kafka-connect/jars/splunk-kafka-connect-v2.0.9.jar
      # CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      # CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/jars"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    volumes:
      - ./kafka-connect/conf:/etc/kafka-connect/conf
      - ./kafka-connect/jars:/etc/kafka-connect/jars
    command:
      - bash
      - -c
      - |
        /usr/bin/connect-standalone \
          /etc/kafka-connect/conf/connect-standalone.properties \
          /etc/kafka-connect/conf/splunk-sink-connector.properties

  splunk:
    image: splunk/splunk:9.0.2
    hostname: splunk
    container_name: splunk
    restart: "no"
    ports:
      - "8000:8000"
      - "8089:8089"
      - "9997:9997"
      - "8080:8080"
      - "8088:8088"
    environment:
      SPLUNK_START_ARGS: "--accept-license"
      SPLUNK_PASSWORD: "ch@ngeM3"
      SPLUNK_DEFAULTS_URL: "/tmp/defaults/default.yml"
      SPLUNK_ROLE: "splunk_standalone"
      SPLUNK_DEBUG: "true"
    #   SPLUNK_APPS_URL: "/tmp/kafka-sdm.tgz"
    volumes:
      - ./splunk/default.yml:/tmp/defaults/default.yml
    # volumes:
    #   - ../kafka-smart-monitoring/telegraf-kafka_1141.tgz:/tmp/kafka-sdm.tgz
    #   - ../splunk/TA-telegraf-kafka:/opt/splunk/etc/apps/TA-telegraf-kafka
    #   - ../splunk/TA-docker-kafka:/opt/splunk/etc/apps/TA-docker-kafka
    #   - ../splunk/TA-kafka-demo:/opt/splunk/etc/apps/TA-kafka-demo
    #   - ../splunk/TA-confluent-interceptors:/opt/splunk/etc/apps/TA-confluent-interceptors
    #   - ../splunk/container_share:/opt/splunk/container_share

  # control-center:
  #   image: confluentinc/cp-enterprise-control-center:latest
  #   hostname: control-center
  #   container_name: control-center
  #   depends_on:
  #     - broker
  #     - schema-registry
  #     - connect
  #     # - ksqldb-server
  #   ports:
  #     - "9021:9021"
  #   environment:
  #     CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
  #     CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'http://connect:8083'
  #     # CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
  #     # CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
  #     CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
  #     CONTROL_CENTER_REPLICATION_FACTOR: 1
  #     CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
  #     CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
  #     CONFLUENT_METRICS_TOPIC_REPLICATION: 1
  #     PORT: 9021


  # schema-registry:
  #   image: confluentinc/cp-schema-registry:latest # 7.3.0
  #   hostname: schema-registry
  #   container_name: schema-registry
  #   depends_on:
  #     - broker
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
